-- This file and its contents are licensed under the Timescale License.
-- Please see the included NOTICE for copyright information and
-- LICENSE-TIMESCALE for a copy of the license.
CREATE TABLE custom_log(job_id int, args jsonb, extra text, runner NAME DEFAULT CURRENT_ROLE);
CREATE OR REPLACE FUNCTION custom_func(jobid int, args jsonb) RETURNS VOID LANGUAGE SQL AS
$$
  INSERT INTO custom_log VALUES($1, $2, 'custom_func');
$$;
CREATE OR REPLACE FUNCTION custom_func_definer(jobid int, args jsonb) RETURNS VOID LANGUAGE SQL AS
$$
  INSERT INTO custom_log VALUES($1, $2, 'security definer');
$$ SECURITY DEFINER;
CREATE OR REPLACE PROCEDURE custom_proc(job_id int, args jsonb) LANGUAGE SQL AS
$$
  INSERT INTO custom_log VALUES($1, $2, 'custom_proc');
$$;
-- procedure with transaction handling
CREATE OR REPLACE PROCEDURE custom_proc2(job_id int, args jsonb) LANGUAGE PLPGSQL AS
$$
BEGIN
  INSERT INTO custom_log VALUES($1, $2, 'custom_proc 1 COMMIT');
  COMMIT;
  INSERT INTO custom_log VALUES($1, $2, 'custom_proc 2 ROLLBACK');
  ROLLBACK;
  INSERT INTO custom_log VALUES($1, $2, 'custom_proc 3 COMMIT');
  COMMIT;
END
$$;
\set ON_ERROR_STOP 0
-- test bad input
SELECT add_job(NULL, '1h');
ERROR:  function or procedure cannot be NULL
SELECT add_job(0, '1h');
ERROR:  function or procedure with OID 0 does not exist
SELECT add_job(-1, '1h');
ERROR:  function or procedure with OID -1 does not exist
SELECT add_job('invalid_func', '1h');
ERROR:  function "invalid_func" does not exist at character 16
SELECT add_job('custom_func', NULL);
ERROR:  schedule interval cannot be NULL
SELECT add_job('custom_func', 'invalid interval');
ERROR:  invalid input syntax for type interval: "invalid interval" at character 31
\set ON_ERROR_STOP 1
SELECT add_job('custom_func','1h', config:='{"type":"function"}'::jsonb);
 add_job 
---------
    1000
(1 row)

SELECT add_job('custom_proc','1h', config:='{"type":"procedure"}'::jsonb);
 add_job 
---------
    1001
(1 row)

SELECT add_job('custom_proc2','1h', config:= '{"type":"procedure"}'::jsonb);
 add_job 
---------
    1002
(1 row)

SELECT add_job('custom_func', '1h', config:='{"type":"function"}'::jsonb);
 add_job 
---------
    1003
(1 row)

SELECT add_job('custom_func_definer', '1h', config:='{"type":"function"}'::jsonb);
 add_job 
---------
    1004
(1 row)

SELECT * FROM timescaledb_information.jobs ORDER BY 1;
 job_id |      application_name      | schedule_interval |   max_runtime   | max_retries | retry_period |      proc_schema      |      proc_name      |       owner       | scheduled |        config         | next_start | hypertable_schema | hypertable_name 
--------+----------------------------+-------------------+-----------------+-------------+--------------+-----------------------+---------------------+-------------------+-----------+-----------------------+------------+-------------------+-----------------
      1 | Telemetry Reporter [1]     | @ 24 hours        | @ 1 min 40 secs |          -1 | @ 1 hour     | _timescaledb_internal | policy_telemetry    | super_user        | t         |                       |            |                   | 
   1000 | User-Defined Action [1000] | @ 1 hour          | @ 0             |          -1 | @ 5 mins     | public                | custom_func         | default_perm_user | t         | {"type": "function"}  |            |                   | 
   1001 | User-Defined Action [1001] | @ 1 hour          | @ 0             |          -1 | @ 5 mins     | public                | custom_proc         | default_perm_user | t         | {"type": "procedure"} |            |                   | 
   1002 | User-Defined Action [1002] | @ 1 hour          | @ 0             |          -1 | @ 5 mins     | public                | custom_proc2        | default_perm_user | t         | {"type": "procedure"} |            |                   | 
   1003 | User-Defined Action [1003] | @ 1 hour          | @ 0             |          -1 | @ 5 mins     | public                | custom_func         | default_perm_user | t         | {"type": "function"}  |            |                   | 
   1004 | User-Defined Action [1004] | @ 1 hour          | @ 0             |          -1 | @ 5 mins     | public                | custom_func_definer | default_perm_user | t         | {"type": "function"}  |            |                   | 
(6 rows)

-- check for corrects counts in telemetry
SELECT json_object_field(get_telemetry_report(always_display_report := true)::json,'num_user_defined_actions');
 json_object_field 
-------------------
 5
(1 row)

\set ON_ERROR_STOP 0
-- test bad input
CALL run_job(NULL);
ERROR:  job ID cannot be NULL
CALL run_job(-1);
ERROR:  job -1 not found
\set ON_ERROR_STOP 1
CALL run_job(1000);
CALL run_job(1001);
CALL run_job(1002);
CALL run_job(1003);
CALL run_job(1004);
SELECT * FROM custom_log ORDER BY job_id, extra;
 job_id |         args          |        extra         |      runner       
--------+-----------------------+----------------------+-------------------
   1000 | {"type": "function"}  | custom_func          | default_perm_user
   1001 | {"type": "procedure"} | custom_proc          | default_perm_user
   1002 | {"type": "procedure"} | custom_proc 1 COMMIT | default_perm_user
   1002 | {"type": "procedure"} | custom_proc 3 COMMIT | default_perm_user
   1003 | {"type": "function"}  | custom_func          | default_perm_user
   1004 | {"type": "function"}  | security definer     | default_perm_user
(6 rows)

\set ON_ERROR_STOP 0
-- test bad input
SELECT delete_job(NULL);
 delete_job 
------------
 
(1 row)

SELECT delete_job(-1);
ERROR:  job -1 not found
\set ON_ERROR_STOP 1
SELECT delete_job(1000);
 delete_job 
------------
 
(1 row)

SELECT delete_job(1001);
 delete_job 
------------
 
(1 row)

SELECT delete_job(1002);
 delete_job 
------------
 
(1 row)

SELECT delete_job(1003);
 delete_job 
------------
 
(1 row)

SELECT delete_job(1004);
 delete_job 
------------
 
(1 row)

-- check jobs got removed
SELECT count(*) FROM timescaledb_information.jobs WHERE job_id >= 1000;
 count 
-------
     0
(1 row)

\c :TEST_DBNAME :ROLE_SUPERUSER
\set ON_ERROR_STOP 0
-- test bad input
SELECT alter_job(NULL, if_exists => false);
ERROR:  job ID cannot be NULL
SELECT alter_job(-1, if_exists => false);
ERROR:  job -1 not found
\set ON_ERROR_STOP 1
-- test bad input but don't fail
SELECT alter_job(NULL, if_exists => true);
NOTICE:  job 0 not found, skipping
 alter_job 
-----------
 
(1 row)

SELECT alter_job(-1, if_exists => true);
NOTICE:  job -1 not found, skipping
 alter_job 
-----------
 
(1 row)

-- test altering job with NULL config
SELECT job_id FROM alter_job(1,scheduled:=false);
 job_id 
--------
      1
(1 row)

SELECT * FROM timescaledb_information.jobs WHERE job_id = 1;
 job_id |    application_name    | schedule_interval |   max_runtime   | max_retries | retry_period |      proc_schema      |    proc_name     |   owner    | scheduled | config | next_start | hypertable_schema | hypertable_name 
--------+------------------------+-------------------+-----------------+-------------+--------------+-----------------------+------------------+------------+-----------+--------+------------+-------------------+-----------------
      1 | Telemetry Reporter [1] | @ 24 hours        | @ 1 min 40 secs |          -1 | @ 1 hour     | _timescaledb_internal | policy_telemetry | super_user | f         |        |            |                   | 
(1 row)

-- test updating job settings
SELECT job_id FROM alter_job(1,config:='{"test":"test"}');
 job_id 
--------
      1
(1 row)

SELECT * FROM timescaledb_information.jobs WHERE job_id = 1;
 job_id |    application_name    | schedule_interval |   max_runtime   | max_retries | retry_period |      proc_schema      |    proc_name     |   owner    | scheduled |      config      | next_start | hypertable_schema | hypertable_name 
--------+------------------------+-------------------+-----------------+-------------+--------------+-----------------------+------------------+------------+-----------+------------------+------------+-------------------+-----------------
      1 | Telemetry Reporter [1] | @ 24 hours        | @ 1 min 40 secs |          -1 | @ 1 hour     | _timescaledb_internal | policy_telemetry | super_user | f         | {"test": "test"} |            |                   | 
(1 row)

SELECT job_id FROM alter_job(1,scheduled:=true);
 job_id 
--------
      1
(1 row)

SELECT * FROM timescaledb_information.jobs WHERE job_id = 1;
 job_id |    application_name    | schedule_interval |   max_runtime   | max_retries | retry_period |      proc_schema      |    proc_name     |   owner    | scheduled |      config      | next_start | hypertable_schema | hypertable_name 
--------+------------------------+-------------------+-----------------+-------------+--------------+-----------------------+------------------+------------+-----------+------------------+------------+-------------------+-----------------
      1 | Telemetry Reporter [1] | @ 24 hours        | @ 1 min 40 secs |          -1 | @ 1 hour     | _timescaledb_internal | policy_telemetry | super_user | t         | {"test": "test"} |            |                   | 
(1 row)

SELECT job_id FROM alter_job(1,scheduled:=false);
 job_id 
--------
      1
(1 row)

SELECT * FROM timescaledb_information.jobs WHERE job_id = 1;
 job_id |    application_name    | schedule_interval |   max_runtime   | max_retries | retry_period |      proc_schema      |    proc_name     |   owner    | scheduled |      config      | next_start | hypertable_schema | hypertable_name 
--------+------------------------+-------------------+-----------------+-------------+--------------+-----------------------+------------------+------------+-----------+------------------+------------+-------------------+-----------------
      1 | Telemetry Reporter [1] | @ 24 hours        | @ 1 min 40 secs |          -1 | @ 1 hour     | _timescaledb_internal | policy_telemetry | super_user | f         | {"test": "test"} |            |                   | 
(1 row)

